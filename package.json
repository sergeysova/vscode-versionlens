{
  "name": "vscode-versionlens",
  "private": true,
  "description": "Shows the latest version for each package using code lens",
  "repository": {
    "type": "git",
    "url": "https://github.com/vscode-contrib/vscode-versionlens.git"
  },
  "author": "Peter Flannery",
  "license": "MIT",
  "version": "0.22.0",
  "publisher": "pflannery",
  "displayName": "Version Lens",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.23.0"
  },
  "keywords": [
    "versions",
    "packages",
    "dependencies",
    "references",
    "npm, bower, dub, dotnet, nuget, jspm, csharp, fsharp, c#, f#, java, maven"
  ],
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onLanguage:json",
    "onLanguage:xml"
  ],
  "main": "./out/extension-bundle.js",
  "scripts": {
    "teardown": "npm run -s clean && rimraf ./node_modules",
    "vscode:prepublish": "npm run -s compile",
    "watch": "node ./node_modules/vscode/bin/compile -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "clean": "rimraf ./out",
    "precompile": "npm run -s clean && jshint ./src",
    "precompile:test": "npm run -s precompile",
    "compile": "tsc -p ./src/bundle.json",
    "compile:test": "tsc -p ./test/bundle.test.json",
    "pretest": "npm run -s compile:test",
    "test": "node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.15",
    "jshint": "2.9.7",
    "mocha-ui-esm": "1.0.0-alpha.4",
    "mock-require": "3.0.2",
    "rimraf": "2.6.2",
    "typescript": "3.2.2",
    "vscode": "1.1.26"
  },
  "dependencies": {
    "systemjs": "~0.21.4",
    "bower": "1.8.4",
    "npm": "6.5.0",
    "npm-package-arg": "6.1.0",
    "minimatch": "3.0.4",
    "opener": "1.5.1",
    "request-light": "0.2.4",
    "semver": "5.6.0",
    "vscode-contrib-jsonc": "1.0.0-beta.2",
    "vscode-languageclient": "5.2.1",
    "xmldoc": "1.1.2"
  },
  "contributes": {
    "commands": [
      {
        "command": "versionlens.showDependencyStatuses",
        "title": "Show dependency statuses",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/dep-status-dark.svg",
          "light": "images/icons/dep-status-light.svg"
        }
      },
      {
        "command": "versionlens.hideDependencyStatuses",
        "title": "Hide dependency statuses",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/dep-status-active.svg",
          "light": "images/icons/dep-status-active.svg"
        }
      },
      {
        "command": "versionlens.showTaggedVersions",
        "title": "Show tagged dependency versions",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/tag-dark.svg",
          "light": "images/icons/tag-light.svg"
        }
      },
      {
        "command": "versionlens.hideTaggedVersions",
        "title": "Hide tagged dependency versions",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/tag-active.svg",
          "light": "images/icons/tag-active.svg"
        }
      },
      {
        "command": "versionlens.showVersionLenses",
        "title": "Show dependency versions",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/toggle-dark.svg",
          "light": "images/icons/toggle-light.svg"
        }
      },
      {
        "command": "versionlens.hideVersionLenses",
        "title": "Hide dependency versions",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/toggle-active.svg",
          "light": "images/icons/toggle-active.svg"
        }
      },
      {
        "command": "versionlens.showingProgress",
        "title": "Analyzing dependencies...",
        "category": "VersionLens",
        "icon": {
          "dark": "images/icons/toggle-active-progress.svg",
          "light": "images/icons/toggle-active-progress.svg"
        }
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "versionlens.showingProgress",
          "when": "false"
        },
        {
          "command": "versionlens.showDependencyStatuses",
          "when": "versionlens.show && versionlens.isActive"
        },
        {
          "command": "versionlens.hideDependencyStatuses",
          "when": "versionlens.show && versionlens.isActive"
        },
        {
          "command": "versionlens.showTaggedVersions",
          "when": "versionlens.show && versionlens.isActive"
        },
        {
          "command": "versionlens.hideTaggedVersions",
          "when": "versionlens.show && versionlens.isActive"
        },
        {
          "command": "versionlens.showVersionLenses",
          "when": "versionlens.show && versionlens.isActive"
        },
        {
          "command": "versionlens.hideVersionLenses",
          "when": "versionlens.show && versionlens.isActive"
        }
      ],
      "editor/title": [
        {
          "command": "versionlens.showDependencyStatuses",
          "when": "versionlens.showDependencyStatuses == false && versionlens.show && versionlens.isActive && textCompareEditorVisible == false",
          "group": "navigation@3"
        },
        {
          "command": "versionlens.hideDependencyStatuses",
          "when": "versionlens.showDependencyStatuses && versionlens.show && versionlens.isActive && textCompareEditorVisible == false",
          "group": "navigation@3"
        },
        {
          "command": "versionlens.showTaggedVersions",
          "when": "versionlens.showTaggedVersions == false && versionlens.show && versionlens.isActive && textCompareEditorVisible == false",
          "group": "navigation@2"
        },
        {
          "command": "versionlens.hideTaggedVersions",
          "when": "versionlens.showTaggedVersions && versionlens.show && versionlens.isActive && textCompareEditorVisible == false",
          "group": "navigation@2"
        },
        {
          "command": "versionlens.showVersionLenses",
          "when": "versionlens.show == false && versionlens.isActive && versionlens.inProgress == false && textCompareEditorVisible == false",
          "group": "navigation@1"
        },
        {
          "command": "versionlens.hideVersionLenses",
          "when": "versionlens.show && versionlens.isActive && versionlens.inProgress == false && textCompareEditorVisible == false",
          "group": "navigation@1"
        },
        {
          "command": "versionlens.showingProgress",
          "when": "versionlens.show && versionlens.isActive && versionlens.inProgress && textCompareEditorVisible == false",
          "group": "navigation@1"
        }
      ]
    },
    "configuration": {
      "title": "Versionlens configuration",
      "properties": {
        "versionlens.versionPrefix": {
          "type": "string",
          "default": "",
          "description": "Inserts this prefix before the version when clicking on the code lens link."
        },
        "versionlens.showVersionLensesAtStartup": {
          "type": "boolean",
          "default": true,
          "description": "Show dependency versions by default. You can use the editor toolbar to show/hide versions at any time."
        },
        "versionlens.showTaggedVersionsAtStartup": {
          "type": "boolean",
          "default": false,
          "description": "Show dist tags by default when vscode starts. You can use the editor toolbar to show/hide dist tags at any time."
        },
        "versionlens.showDependencyStatusesAtStartup": {
          "type": "boolean",
          "default": false,
          "description": "Show dependency statuses default when vscode starts. You can use the editor toolbar to show/hide dependency statuses at any time."
        },
        "versionlens.npm.dependencyProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1,
          "default": [
            "dependencies",
            "devDependencies",
            "peerDependencies",
            "optionalDependencies"
          ],
          "description": "Defines which properties in package.json should be parsed by this extension"
        },
        "versionlens.npm.distTagFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 0,
          "default": [],
          "description": "Define which common dist tags you want to see. i.e. [alpha, beta]. If you don't specify any dist tags then all the dist-tags for a package will be shown."
        },
        "versionlens.bower.dependencyProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1,
          "default": [
            "dependencies",
            "devDependencies"
          ],
          "description": "Defines which properties in bower.json should be parsed by this extension"
        },
        "versionlens.dotnet.dependencyProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1,
          "default": [
            "PackageReference",
            "DotNetCliToolReference"
          ],
          "description": "Defines which properties in project.json should be parsed by this extension"
        },
        "versionlens.dotnet.tagFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 0,
          "default": [],
          "description": "Define which common tagged versions you want to see. i.e. [alpha, beta]. If you don't specify any dist tags then all the dist-tags for a package will be shown."
        },
        "versionlens.dotnet.nugetFeeds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [ "https://api-v2v3search-0.nuget.org/autocomplete" ],
          "description": "Defines which NuGet feeds to use for package search. Has to be 'SearchAutocompleteService' endpoint, which can be found by navigating to feed index (e.g. https://api.nuget.org/v3/index.json) and looking for Url with that type."
        },
        "versionlens.dotnet.includePrerelease": {
          "type": "boolean",
          "default": true,
          "description": "Include NuGet pre-release packages"
        },
        "versionlens.dub.dependencyProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1,
          "default": [
            "dependencies",
            "versions"
          ],
          "description": "Defines which properties in dub.json should be parsed by this extension"
        },
        "versionlens.github.taggedCommits": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Release",
              "Tag"
            ]
          },
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 2,
          "default": [
            "Release",
            "Tag"
          ],
          "description": "Defines what tags to include when comparing github package versions."
        },
        "versionlens.github.accessToken": {
          "type": "string",
          "default": "",
          "description": "Used for making basic read only github api requests. To generate a token see https://help.github.com/articles/creating-an-access-token-for-command-line-use/#creating-a-token. When no token is provided then access to the github api is rate limited to 60 requests every 10 minutes or so."
        },
        "versionlens.missingDependencyColour": {
          "type": "string",
          "default": "red",
          "description": "The colour used to show missing dependencies. Accept's valid CSS colours"
        },
        "versionlens.installedDependencyColour": {
          "type": "string",
          "default": "green",
          "description": "The colour used to show installed dependencies. Accept's valid CSS colours"
        },
        "versionlens.outdatedDependencyColour": {
          "type": "string",
          "default": "orange",
          "description": "The colour used to show outdated dependencies. Accept's valid CSS colours"
        },
        "versionlens.prereleaseDependencyColour": {
          "type": "string",
          "default": "yellowgreen",
          "description": "The colour used to show prerelease dependencies. Accept's valid CSS colours"
        }
      }
    }
  }
}
